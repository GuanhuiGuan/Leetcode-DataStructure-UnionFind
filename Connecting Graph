class ConnectingGraph {
    
private:
    vector<int> father;
public:
    int find(int x){
        if(father[x] == 0){
            return x;
        }
        return father[x] = find(father[x]);
    }
    

public:
    /*
    * @param n: An integer
    */ConnectingGraph(int n) {
        father.resize(n + 1);// do intialization if necessary
        for(int i = 0; i <= n; i++){
            father[i] = 0;
        }
    }

    /*
     * @param a: An integer
     * @param b: An integer
     * @return: nothing
     */
    void connect(int a, int b) {
        int fa = find(a);
        int fb = find(b);
        if(fa != fb){
            father[fa] = fb;
        }
        // write your code here
    }

    /*
     * @param a: An integer
     * @param b: An integer
     * @return: A boolean
     */
    bool query(int a, int b) {
        int fa = find(a);
        int fb = find(b);
        return fa == fb;
        // write your code here
    }
};
